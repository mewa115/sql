Numbering rows
The simplest application for window functions is numbering rows. 
Numbering rows allows you to easily fetch the nth row. 
For example, it would be very difficult to get the 35th row in any given table if you didn't have a column with each row's number.

SELECT
  *,
  -- Assign numbers to each row
  ROW_NUMBER() OVER() AS Row_N
FROM Summer_Medals
ORDER BY Row_N ASC;


Numbering Olympic games in ascending order
The Summer Olympics dataset contains the results of the games between 1896 and 2012. 
The first Summer Olympics were held in 1896, the second in 1900, and so on. 
What if you want to easily query the table to see in which year the 13th Summer Olympics were held? You'd need to number the rows for that.


SELECT
  Year,
  -- Assign numbers to each year
  ROW_NUMBER() OVER() AS Row_N
FROM (
  SELECT distinct city, year
  FROM Summer_Medals
  ORDER BY Year ASC
) AS Years
ORDER BY Year ASC;


Numbering Olympic games in descending order
You've already numbered the rows in the Summer Medals dataset. 
What if you need to reverse the row numbers so that the most recent Olympic games' rows have a lower number?

SELECT
  Year,
  -- Assign the lowest numbers to the most recent years
  ROW_NUMBER() OVER (order by year desc) AS Row_N
FROM (
  SELECT DISTINCT Year
  FROM Summer_Medals
) AS Years
ORDER BY Year;


Numbering Olympic athletes by medals earned
Row numbering can also be used for ranking. 
For example, numbering rows and ordering by the count of medals each athlete earned in the OVER clause will assign 1 to the highest-earning medalist, 
2 to the second highest-earning medalist, and so on.

SELECT
  -- Count the number of medals each athlete has earned
  athlete,
  count(*) AS Medals
FROM Summer_Medals
GROUP BY Athlete
ORDER BY Medals DESC;



Numbering Olympic athletes by medals earned
Row numbering can also be used for ranking. 
For example, numbering rows and ordering by the count of medals each athlete earned in the OVER clause will assign 1 to the highest-earning medalist, 
2 to the second highest-earning medalist, and so on.

WITH Athlete_Medals AS (
  SELECT
    -- Count the number of medals each athlete has earned
    Athlete,
    COUNT(*) AS Medals
  FROM Summer_Medals
  GROUP BY Athlete)

SELECT
  -- Number each athlete by how many medals they've earned
  athlete,
  row_number() OVER (ORDER BY Medals DESC) AS Row_N
FROM Athlete_Medals
ORDER BY Medals DESC;



Reigning weightlifting champions
A reigning champion is a champion who's won both the previous and current years' competitions. 
To determine if a champion is reigning, the previous and current years' results need to be in the same row, in two different columns.
Return each year's gold medalists in the Men's 69KG weightlifting competition.

SELECT
  -- Return each year's champions' countries
  year,
  country AS champion
FROM Summer_Medals
WHERE
  Discipline = 'Weightlifting' AND
  Event = '69KG' AND
  Gender = 'Men' AND
  Medal = 'Gold';
  
  
  
  
Having wrapped the previous query in the Weightlifting_Gold CTE, get the previous year's champion for each year.
  
WITH Weightlifting_Gold AS (
  SELECT
    -- Return each year's champions' countries
    Year,
    Country AS champion
  FROM Summer_Medals
  WHERE
    Discipline = 'Weightlifting' AND
    Event = '69KG' AND
    Gender = 'Men' AND
    Medal = 'Gold')

SELECT
  Year, Champion,
  -- Fetch the previous year's champion
  LAG(Champion,1) OVER
    (ORDER BY YEAR ASC) AS Last_Champion
FROM Weightlifting_Gold
ORDER BY Year ASC;




